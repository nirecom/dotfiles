#!/bin/bash
export LANG=ja_JP.UTF-8
export LC_MESSAGES=C
export TERM=xterm-256color
# terraform does not read region from ~/.aws/config.
# ref. https://ja.ojit.com/so/terraform/3413058
export AWS_DEFAULT_REGION=$(aws configure get region --profile default)
#export BASH_SILENCE_DEPRECATION_WARNING=1
#export LSCOLORS=Cxfxcxdxbxegedabagacad
export LSCOLORS=gxfxcxdxbxegedabagacad

# Aliases
alias em='emacs'
alias d='docker'
alias dx='docker exec -it'
alias dc='docker-compose'
alias dcu='docker-compose up -d'
alias dcub='docker-compose up -d --build'
alias dcd='docker-compose down'
alias g='git'
# gitpush alias: ref. https://qiita.com/ut0n/items/2074623c0b8c1c9ff8e6
gitpush() {
  git add -A
  git commit -m "$*"
  git push origin HEAD
}
alias gd='git diff'
alias gs='git status'
alias gl='git pull'
alias gp=gitpush
alias k='kubectl'
alias pon='predict-on' # zsh
alias poff='predict-off' # zsh
alias psmem='ps aux k -pmem | head -n 10'
alias pscpu='ps aux k -pcpu | head -n 10'
alias tmux='~/dotfiles/tmux.sh'
alias viconfig='vim ~/.ssh/config; aws s3 cp ~/.ssh/config s3://nirecom-home/.ssh/'

if [[ "$(uname)" == 'Darwin' ]]; then
    # airport -I for mac address check
    # ref. https://qiita.com/KEINOS/items/dbee5a53caa124430b1f
    alias airport='/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport'
fi

if [[ "$(uname)" == 'Darwin' ]]; then
    alias ll='ls -alG'
    alias ls='ls -G'
elif [[ "$(expr substr $(uname -s) 1 5)" == 'Linux' ]]; then
    alias ll='ls -al --color=auto'
    alias ls='ls --color=auto'
else
    alias ll='ls -al'
fi

if [ -v WSLENV ]; then
    alias open="explorer.exe" # open browser for the same experience as macOS
fi

# make each path unique
# ref. https://qiita.com/key-amb/items/ce39b0c85b30888e1e3b
uniqpath() {
    _path=""
    for _p in $(echo $PATH | tr ':' ' '); do
        case ":${_path}:" in
            *:"${_p}":* )
            ;;
            * )
                if [ "$_path" ]; then
                    _path="$_path:$_p"
                else
                    _path=$_p
                fi
                ;;
        esac
    done
    PATH=$_path
    unset _p
    unset _path
}
export PATH="$HOME/.nodebrew/current/bin:$HOME/.rbenv/bin:$PATH:/usr/local/go/bin:$HOME/development/flutter/bin"
uniqpath

# git settings: common part
source ~/completion/git-prompt.sh
GIT_PS1_SHOWUPSTREAM=true
GIT_PS1_SHOWUNTRACKEDFILES=true
GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWSTASHSTATE=true

# Setup ssh-agent
ISTERM=false
if [[ "$(uname)" == 'Darwin' ]]; then
    if type keychain >/dev/null 2>&1
    then
        keychain --nogui --quiet ~/.ssh/id_rsa >/dev/null 2>&1 # giving up error happens
    fi
    ISTERM=true
elif [ -v WSLENV ]; then # WSL. Linux, but it's terminal
    ISTERM=true
elif [[ "$(expr substr $(uname -s) 1 5)" == 'Linux' ]]; then
    ISTERM=false
elif [ "$(expr substr $(uname -s) 1 10)" == 'MINGW32_NT' ]; then
    ISTERM=true
elif [ "$(expr substr $(uname -s) 1 10)" == 'MINGW64_NT' ]; then
    ISTERM=true
fi

if "$ISTERM"; then
    if [ -f ~/.ssh-agent ]; then
    . ~/.ssh-agent >/dev/null
    fi
    if [ -z "$SSH_AGENT_PID" ] || ! kill -0 $SSH_AGENT_PID >/dev/null 2>&1; then
    echo "Launching ssh-agent ..."
    ssh-agent > ~/.ssh-agent
    . ~/.ssh-agent >/dev/null
    fi
    ssh-add -l >& /dev/null || ~/.ssh/ssh-add-all
fi

if type git > /dev/null 2>&1; then # if git is installed
    if type pgrep >/dev/null 2>&1; then
    PID=`pgrep -fo bash`
    fi
    if [ -n "$PID" ] && [ $$ != "$PID" ]; then # if first bash process
          echo "git pull ~/dotfiles ..."
          git -C ~/dotfiles pull
    fi
fi

# Source code highlighting
if [[ "$(uname)" == 'Darwin' ]]; then
    export LESSOPEN="| /usr/local/bin/src-hilite-lesspipe.sh %s"
    export LESS='-R'
elif [[ "$(expr substr $(uname -s) 1 5)" == 'Linux' ]]; then
    export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
    export LESS='-R'
fi

# nvm on macos
if [[ "$(uname)" == 'Darwin' ]]; then
    export NVM_DIR="$HOME/.nvm"
    [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
    # disabled, too heavy on old macbook :(
    #    [ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

fi
